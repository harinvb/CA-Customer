# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: |
        |1|oGNQOReOMx5sOj2szw/EDMO6t3k=|6h/eXeu5sRvWvKFvNNTBijeQPqU= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQe55Cuo73CvLPmQ7Tt8V9Wm/vAHoxRfWE8r8Jcn9DUbvPX6097isGUc0m7rBqKVL8usVGTlvaAHgCvqFZ27Oyzvu+ww5fW45dUuR4uRB0XTF6TBMfu0hDdzl19hmCJ4o0+C/6ukFvRFKMkro/1/SM2RhTUPSJShqNrsG3QJZATj4EcL5j64D5XrtYj9hkY11VizwdNFJp4/aQ3FBbLh2zyLzuUJnS/4L3aFTzDDTzpbf6UBUiZ8+Nosswv+X0ENT3HkeeAnw8qmx/H60jOCf3dS7U5LEj+jbD8bzqEUSukfi2ri4OMtjrdwFjl7qmxyiWQCQkSe/HX0zhluZKWqQHPOq+fuzR0TMzH2fPCnA9jrGUkUXtPiCJixzhhwksP74vFXCUH0cgBarlBXm7f3hEOjZyCLg1xwFMptdcHGHtl0As6wt6xwwBR5VJOOpmg9nADn3QEam4D+933hqXEHbrruO2N9SYO0VKF9j+sL044fV23osqPYqsi/MC5MCCmwE= hari@Inspiron-7573'
      sshKeySecureFile: 'id_rsa'
   - task: SonarCloudPrepare@1
     inputs:
       SonarCloud: 'sonarCloud'
       organization: 'devops-mindtree-hari'
       scannerMode: 'Other'
   - task: Maven@3
     inputs:
       mavenPomFile: 'pom.xml'
       goals: 'package'
       options: '--settings .mvn/MavenSecrets/settings.xml'
       publishJUnitResults: true
       testResultsFiles: '**/surefire-reports/TEST-*.xml'
       testRunTitle: 'Junit'
       codeCoverageToolOption: 'JaCoCo'
       codeCoverageRestoreOriginalPomXml: true
       javaHomeOption: 'JDKVersion'
       mavenVersionOption: 'Default'
       mavenAuthenticateFeed: false
       effectivePomSkip: false
       sonarQubeRunAnalysis: true
       sqMavenPluginVersionChoice: 'latest'
       pmdRunAnalysis: true
  
   - task: Maven@3
     inputs:
       mavenPomFile: 'pom.xml'
       goals: 'deploy'
       options: '--settings .mvn/MavenSecrets/settings.xml'
       publishJUnitResults: false
       javaHomeOption: 'JDKVersion'
       mavenVersionOption: 'Default'
       mavenAuthenticateFeed: false
       effectivePomSkip: false
       sonarQubeRunAnalysis: false
  - task: TerraformTaskV2@2
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
      backendServiceArm: 'TerraformRM'
      backendAzureRmResourceGroupName: 'cloud-shell-storage-centralindia'
      backendAzureRmStorageAccountName: 'csg100320015f749fb9'
      backendAzureRmContainerName: 'terraform'
      backendAzureRmKey: 'CA_Assignment_Ansible_Managed_Node_State'
  - task: TerraformTaskV2@2
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
      environmentServiceNameAzureRM: 'TerraformRM'

  - task: Bash@3
    inputs:
      filePath: 'Terraform/Infrastructure.sh'

  - task: CopyFiles@2
    inputs:
      SourceFolder: 'Ansible'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: CopyFiles@2
    inputs:
      SourceFolder: 'target'
      Contents: '*.jar'
      TargetFolder: '$(build.artifactstagingdirectory)'