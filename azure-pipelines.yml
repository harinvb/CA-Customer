# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
  - task: SonarCloudPrepare@1
    displayName: "Sonar Pre-configuration"
    inputs:
      SonarCloud: 'sonarCloud'
      organization: 'devops-mindtree-hari'
      scannerMode: 'Other'
  - task: DownloadSecureFile@1
    displayName: "Fetching project settings"
    name: settings
    inputs:
      secureFile: 'settings.xml'
  - task: Maven@3
    displayName: "Building application"
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'package'
      options: '--settings $(settings.secureFilePath)'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      testRunTitle: 'Junit'
      codeCoverageToolOption: 'JaCoCo'
      codeCoverageRestoreOriginalPomXml: true
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: true
      sqMavenPluginVersionChoice: 'latest'
      pmdRunAnalysis: true
  - task: CopyFiles@2
    displayName: "Copying build artifacts"
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        target/*.jar
        **/Ansible/**
        **/Terraform/**
        Deployment.yaml
      TargetFolder: '$(build.artifactstagingdirectory)'
  - task: Docker@2
    displayName: "Docker image build & publish"
    inputs:
      containerRegistry: 'CA-Docker'
      repository: 'harinvb/customer'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: 'latest'
  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts to pipeline"
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'CI_ARTIFACTS'
      publishLocation: 'Container'
  - task: Maven@3
    displayName: "Deploying build artifact"
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'deploy'
      options: '--settings $(settings.secureFilePath)'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
